version: '2'

services:
  mymaster:
    image: gettyimages/spark:2.2.0-hadoop-2.7
    command: bin/spark-class org.apache.spark.deploy.master.Master -h mymaster
    hostname: mymaster
    container_name: mymaster
    environment:
      - MASTER=spark://mymaster:7077
      - SPARK_CONF_DIR=/conf
      - SPARK_PUBLIC_DNS=localhost
    expose:
      - 6066
      - 7001
      - 7002
      - 7003
      - 7004
      - 7005
      - 7006
      - 7077
    ports:
      - 4040:4040
      - 6066:6066
      - 7077:7077
      - 8080:8080
    volumes:
      - $DATA_ROOT/mymaster/var/log:/var/log
      - $DATA_ROOT/mymaster/data:/data
      - ./conf:/conf      
      - ./target/scala-2.11:/app

  myworker:
    image: gettyimages/spark:2.2.0-hadoop-2.7
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://mymaster:7077
    hostname: myworker
    container_name: myworker
    environment:
      SPARK_CONF_DIR: /conf
      SPARK_WORKER_CORES: 2
      SPARK_WORKER_MEMORY: 4g
      SPARK_WORKER_PORT: 8881
      SPARK_WORKER_WEBUI_PORT: 8081
      SPARK_PUBLIC_DNS: localhost
    depends_on:
      - mymaster
    expose:
      - 7012
      - 7013
      - 7014
      - 7015
      - 7016
      - 8081
      - 8881
    ports:
      - 8081:8081
    volumes:
      - $DATA_ROOT/myworker/var/log:/var/log
      - $DATA_ROOT/myworker/data:/data
      - ./conf:/conf      

  myelasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.0.0
    container_name: myelasticsearch
    environment:
      - cluster.name=es-docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - 9200:9200
    volumes:
      - $DATA_ROOT/myelasticsearch/data:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1

  mycassandra:
    image: cassandra:3.11.1
    container_name: mycassandra
    ports:
      - 9160:9160
      - 9042:9042
      - 7199:7199
      - 7001:7001
      - 7000:7000
    volumes:
      - $DATA_ROOT/mycassandra:/var/lib/cassandra

  myzookeeper:
    image: confluent/zookeeper
    container_name: myzookeeper
    ports:
      - "2181:2181"
    environment:
      zk_id: "1"

  mykafka:
    image: confluent/kafka
    container_name: mykafka
    depends_on:
      - myzookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "myzookeeper:2181"

  mypostgres:
    image: postgres:10.1
    container_name: mypostgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
    volumes:
      - $DATA_ROOT/mypostgres:/var/lib/postgresql
